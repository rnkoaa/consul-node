https://cecilphillip.com/using-consul-for-health-checks-with-asp-net-core/
https://alex.dzyoba.com/blog/go-consul-service/

 curl http://localhost:8500/v1/health/service/consul?pretty
curl http://localhost:8500/v1/health/service/consul?pretty


Register a service
POST /services/{service_name}

example
Register a service
curl -X PUT -d '{"Datacenter": "dc1", "Node": "google",
   "Address": "www.google.com",
   "Service": {"Service": "search", "Port": 80}}'
   http://127.0.0.1:8500/v1/catalog/register

echo '{"Datacenter": "dc1", "Node": "google", "Address": "www.google.com", "Service": {"Service": "search", "Port": 80}}' http -v PUT :8500/v1/catalog/register
 
 curl localhost:8500/v1/health/service/webkv?passing

Deregister a service
echo '{"Datacenter": "dc1", "Node": "google"}' | http -V PUT :8500/v1/catalog/deregister

Sample Payloads
{
  "Datacenter": "dc1",
  "Node": "foobar"
}

{
  "Datacenter": "dc1",
  "Node": "foobar",
  "CheckID": "service:redis1"
}

{
  "Datacenter": "dc1",
  "Node": "foobar",
  "ServiceID": "redis1"
}

curl -X PUT -d '{"Datacenter": "dc1", "Node": "google"}' http://127.0.0.1:8500/v1/catalog/deregister

curl -X PUT -d '{"ID": <ServiceID>, "Name": <ServiceName>, "Check": {"id": <CheckID>, "script": <custom script to check the service health>, "interval": <e.g. 10s>}}' http://localhost:8500/v1/agent/service/register


var registration = new AgentServiceRegistration()
{
    ID = $"{consulConfig.Value.ServiceID}-{uri.Port}",
    Name = consulConfig.Value.ServiceName,
    Address = $"{uri.Scheme}://{uri.Host}",
    Port = uri.Port,
    Tags = new[] { "Students", "Courses", "School" },
    Checks = [new AgentCheckRegistration()
              {
                  HTTP = $"{uri.Scheme}://{uri.Host}:{uri.Port}/api/health/status",
                  Notes = "Checks /health/status on localhost",
                  Timeout = TimeSpan.FromSeconds(3) ,
                  Interval = TimeSpan.FromSeconds(10)
              }]
};